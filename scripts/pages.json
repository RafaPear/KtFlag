[{"name":"abstract fun execute(vararg arg: String, context: T?): CommandResult<T>","description":"pt.rafap.ktflag.cmd.CommandImpl.execute","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-impl/execute.html","searchKeys":["execute","abstract fun execute(vararg arg: String, context: T?): CommandResult<T>","pt.rafap.ktflag.cmd.CommandImpl.execute"]},{"name":"abstract val info: CommandInfo","description":"pt.rafap.ktflag.cmd.CommandImpl.info","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-impl/info.html","searchKeys":["info","abstract val info: CommandInfo","pt.rafap.ktflag.cmd.CommandImpl.info"]},{"name":"class CommandParser<T>(cmd: CommandImpl<T>, val config: ParserConfig<T> = ParserConfig())","description":"pt.rafap.ktflag.CommandParser","location":"-kt-flag/pt.rafap.ktflag/-command-parser/index.html","searchKeys":["CommandParser","class CommandParser<T>(cmd: CommandImpl<T>, val config: ParserConfig<T> = ParserConfig())","pt.rafap.ktflag.CommandParser"]},{"name":"class CommandRegister<T>(cmd: CommandImpl<T>, helpCmd: CommandImpl<T>? = null)","description":"pt.rafap.ktflag.cmd.CommandRegister","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-register/index.html","searchKeys":["CommandRegister","class CommandRegister<T>(cmd: CommandImpl<T>, helpCmd: CommandImpl<T>? = null)","pt.rafap.ktflag.cmd.CommandRegister"]},{"name":"class ERROR<T>(message: String) : CommandResult<T> ","description":"pt.rafap.ktflag.cmd.CommandResult.ERROR","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-e-r-r-o-r/index.html","searchKeys":["ERROR","class ERROR<T>(message: String) : CommandResult<T> ","pt.rafap.ktflag.cmd.CommandResult.ERROR"]},{"name":"class INVALID_ARGS<T>(info: CommandInfo, got: Int) : CommandResult<T> ","description":"pt.rafap.ktflag.cmd.CommandResult.INVALID_ARGS","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-i-n-v-a-l-i-d_-a-r-g-s/index.html","searchKeys":["INVALID_ARGS","class INVALID_ARGS<T>(info: CommandInfo, got: Int) : CommandResult<T> ","pt.rafap.ktflag.cmd.CommandResult.INVALID_ARGS"]},{"name":"class INVALID_INPUT<T>(message: String) : CommandResult<T> ","description":"pt.rafap.ktflag.cmd.CommandResult.INVALID_INPUT","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-i-n-v-a-l-i-d_-i-n-p-u-t/index.html","searchKeys":["INVALID_INPUT","class INVALID_INPUT<T>(message: String) : CommandResult<T> ","pt.rafap.ktflag.cmd.CommandResult.INVALID_INPUT"]},{"name":"class NOT_IMPLEMENTED<T>(message: String) : CommandResult<T> ","description":"pt.rafap.ktflag.cmd.CommandResult.NOT_IMPLEMENTED","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/index.html","searchKeys":["NOT_IMPLEMENTED","class NOT_IMPLEMENTED<T>(message: String) : CommandResult<T> ","pt.rafap.ktflag.cmd.CommandResult.NOT_IMPLEMENTED"]},{"name":"const val BLUE: String","description":"pt.rafap.ktflag.style.Colors.BLUE","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-b-l-u-e.html","searchKeys":["BLUE","const val BLUE: String","pt.rafap.ktflag.style.Colors.BLUE"]},{"name":"const val BOLD: String","description":"pt.rafap.ktflag.style.Colors.BOLD","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-b-o-l-d.html","searchKeys":["BOLD","const val BOLD: String","pt.rafap.ktflag.style.Colors.BOLD"]},{"name":"const val CYAN: String","description":"pt.rafap.ktflag.style.Colors.CYAN","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-c-y-a-n.html","searchKeys":["CYAN","const val CYAN: String","pt.rafap.ktflag.style.Colors.CYAN"]},{"name":"const val ERROR_COLOR: String","description":"pt.rafap.ktflag.style.Colors.ERROR_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-e-r-r-o-r_-c-o-l-o-r.html","searchKeys":["ERROR_COLOR","const val ERROR_COLOR: String","pt.rafap.ktflag.style.Colors.ERROR_COLOR"]},{"name":"const val GREEN: String","description":"pt.rafap.ktflag.style.Colors.GREEN","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-g-r-e-e-n.html","searchKeys":["GREEN","const val GREEN: String","pt.rafap.ktflag.style.Colors.GREEN"]},{"name":"const val HELP_ALIAS_COLOR: String","description":"pt.rafap.ktflag.style.Colors.HELP_ALIAS_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-h-e-l-p_-a-l-i-a-s_-c-o-l-o-r.html","searchKeys":["HELP_ALIAS_COLOR","const val HELP_ALIAS_COLOR: String","pt.rafap.ktflag.style.Colors.HELP_ALIAS_COLOR"]},{"name":"const val HELP_DESC_COLOR: String","description":"pt.rafap.ktflag.style.Colors.HELP_DESC_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-h-e-l-p_-d-e-s-c_-c-o-l-o-r.html","searchKeys":["HELP_DESC_COLOR","const val HELP_DESC_COLOR: String","pt.rafap.ktflag.style.Colors.HELP_DESC_COLOR"]},{"name":"const val HELP_USAGE_COLOR: String","description":"pt.rafap.ktflag.style.Colors.HELP_USAGE_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-h-e-l-p_-u-s-a-g-e_-c-o-l-o-r.html","searchKeys":["HELP_USAGE_COLOR","const val HELP_USAGE_COLOR: String","pt.rafap.ktflag.style.Colors.HELP_USAGE_COLOR"]},{"name":"const val INFO_COLOR: String","description":"pt.rafap.ktflag.style.Colors.INFO_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-i-n-f-o_-c-o-l-o-r.html","searchKeys":["INFO_COLOR","const val INFO_COLOR: String","pt.rafap.ktflag.style.Colors.INFO_COLOR"]},{"name":"const val PROMPT_COLOR: String","description":"pt.rafap.ktflag.style.Colors.PROMPT_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-p-r-o-m-p-t_-c-o-l-o-r.html","searchKeys":["PROMPT_COLOR","const val PROMPT_COLOR: String","pt.rafap.ktflag.style.Colors.PROMPT_COLOR"]},{"name":"const val PURPLE: String","description":"pt.rafap.ktflag.style.Colors.PURPLE","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-p-u-r-p-l-e.html","searchKeys":["PURPLE","const val PURPLE: String","pt.rafap.ktflag.style.Colors.PURPLE"]},{"name":"const val RED: String","description":"pt.rafap.ktflag.style.Colors.RED","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-r-e-d.html","searchKeys":["RED","const val RED: String","pt.rafap.ktflag.style.Colors.RED"]},{"name":"const val RESET: String","description":"pt.rafap.ktflag.style.Colors.RESET","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-r-e-s-e-t.html","searchKeys":["RESET","const val RESET: String","pt.rafap.ktflag.style.Colors.RESET"]},{"name":"const val UNDERLINE: String","description":"pt.rafap.ktflag.style.Colors.UNDERLINE","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-u-n-d-e-r-l-i-n-e.html","searchKeys":["UNDERLINE","const val UNDERLINE: String","pt.rafap.ktflag.style.Colors.UNDERLINE"]},{"name":"const val WARNING_COLOR: String","description":"pt.rafap.ktflag.style.Colors.WARNING_COLOR","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-w-a-r-n-i-n-g_-c-o-l-o-r.html","searchKeys":["WARNING_COLOR","const val WARNING_COLOR: String","pt.rafap.ktflag.style.Colors.WARNING_COLOR"]},{"name":"const val WHITE: String","description":"pt.rafap.ktflag.style.Colors.WHITE","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-w-h-i-t-e.html","searchKeys":["WHITE","const val WHITE: String","pt.rafap.ktflag.style.Colors.WHITE"]},{"name":"const val YELLOW: String","description":"pt.rafap.ktflag.style.Colors.YELLOW","location":"-kt-flag/pt.rafap.ktflag.style/-colors/-y-e-l-l-o-w.html","searchKeys":["YELLOW","const val YELLOW: String","pt.rafap.ktflag.style.Colors.YELLOW"]},{"name":"constructor(cause: String, isError: Boolean = false, result: T? = null)","description":"pt.rafap.ktflag.cmd.CommandResult.CommandResult","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-command-result.html","searchKeys":["CommandResult","constructor(cause: String, isError: Boolean = false, result: T? = null)","pt.rafap.ktflag.cmd.CommandResult.CommandResult"]},{"name":"constructor(cause: String, message: String, isError: Boolean, result: T? = null)","description":"pt.rafap.ktflag.cmd.CommandResult.CommandResult","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-command-result.html","searchKeys":["CommandResult","constructor(cause: String, message: String, isError: Boolean, result: T? = null)","pt.rafap.ktflag.cmd.CommandResult.CommandResult"]},{"name":"constructor(info: CommandInfo, got: Int)","description":"pt.rafap.ktflag.cmd.CommandResult.INVALID_ARGS.INVALID_ARGS","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-i-n-v-a-l-i-d_-a-r-g-s/-i-n-v-a-l-i-d_-a-r-g-s.html","searchKeys":["INVALID_ARGS","constructor(info: CommandInfo, got: Int)","pt.rafap.ktflag.cmd.CommandResult.INVALID_ARGS.INVALID_ARGS"]},{"name":"constructor(message: String)","description":"pt.rafap.ktflag.cmd.CommandResult.ERROR.ERROR","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-e-r-r-o-r/-e-r-r-o-r.html","searchKeys":["ERROR","constructor(message: String)","pt.rafap.ktflag.cmd.CommandResult.ERROR.ERROR"]},{"name":"constructor(message: String)","description":"pt.rafap.ktflag.cmd.CommandResult.INVALID_INPUT.INVALID_INPUT","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-i-n-v-a-l-i-d_-i-n-p-u-t/-i-n-v-a-l-i-d_-i-n-p-u-t.html","searchKeys":["INVALID_INPUT","constructor(message: String)","pt.rafap.ktflag.cmd.CommandResult.INVALID_INPUT.INVALID_INPUT"]},{"name":"constructor(message: String)","description":"pt.rafap.ktflag.cmd.CommandResult.NOT_IMPLEMENTED.NOT_IMPLEMENTED","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d.html","searchKeys":["NOT_IMPLEMENTED","constructor(message: String)","pt.rafap.ktflag.cmd.CommandResult.NOT_IMPLEMENTED.NOT_IMPLEMENTED"]},{"name":"constructor(prompt: String = colorText(\"> \", Colors.PURPLE), helpCmd: CommandImpl<T>? = null)","description":"pt.rafap.ktflag.ParserConfig.ParserConfig","location":"-kt-flag/pt.rafap.ktflag/-parser-config/-parser-config.html","searchKeys":["ParserConfig","constructor(prompt: String = colorText(\"> \", Colors.PURPLE), helpCmd: CommandImpl<T>? = null)","pt.rafap.ktflag.ParserConfig.ParserConfig"]},{"name":"constructor(title: String, description: String, longDescription: String = description, aliases: List<String>, usage: String, minArgs: Int, maxArgs: Int)","description":"pt.rafap.ktflag.cmd.CommandInfo.CommandInfo","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/-command-info.html","searchKeys":["CommandInfo","constructor(title: String, description: String, longDescription: String = description, aliases: List<String>, usage: String, minArgs: Int, maxArgs: Int)","pt.rafap.ktflag.cmd.CommandInfo.CommandInfo"]},{"name":"constructor(vararg cmd: CommandImpl<T>, config: ParserConfig<T> = ParserConfig())","description":"pt.rafap.ktflag.CommandParser.CommandParser","location":"-kt-flag/pt.rafap.ktflag/-command-parser/-command-parser.html","searchKeys":["CommandParser","constructor(vararg cmd: CommandImpl<T>, config: ParserConfig<T> = ParserConfig())","pt.rafap.ktflag.CommandParser.CommandParser"]},{"name":"constructor(vararg cmd: CommandImpl<T>, helpCmd: CommandImpl<T>? = null)","description":"pt.rafap.ktflag.cmd.CommandRegister.CommandRegister","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-register/-command-register.html","searchKeys":["CommandRegister","constructor(vararg cmd: CommandImpl<T>, helpCmd: CommandImpl<T>? = null)","pt.rafap.ktflag.cmd.CommandRegister.CommandRegister"]},{"name":"data class CommandInfo(val title: String, val description: String, val longDescription: String = description, val aliases: List<String>, val usage: String, val minArgs: Int, val maxArgs: Int)","description":"pt.rafap.ktflag.cmd.CommandInfo","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/index.html","searchKeys":["CommandInfo","data class CommandInfo(val title: String, val description: String, val longDescription: String = description, val aliases: List<String>, val usage: String, val minArgs: Int, val maxArgs: Int)","pt.rafap.ktflag.cmd.CommandInfo"]},{"name":"data class ParserConfig<T>(val prompt: String = colorText(\"> \", Colors.PURPLE), val helpCmd: CommandImpl<T>? = null)","description":"pt.rafap.ktflag.ParserConfig","location":"-kt-flag/pt.rafap.ktflag/-parser-config/index.html","searchKeys":["ParserConfig","data class ParserConfig<T>(val prompt: String = colorText(\"> \", Colors.PURPLE), val helpCmd: CommandImpl<T>? = null)","pt.rafap.ktflag.ParserConfig"]},{"name":"fun colorText(text: String, vararg colors: String): String","description":"pt.rafap.ktflag.style.Colors.colorText","location":"-kt-flag/pt.rafap.ktflag.style/-colors/color-text.html","searchKeys":["colorText","fun colorText(text: String, vararg colors: String): String","pt.rafap.ktflag.style.Colors.colorText"]},{"name":"fun getAllCommands(): List<CommandImpl<T>>","description":"pt.rafap.ktflag.CommandParser.getAllCommands","location":"-kt-flag/pt.rafap.ktflag/-command-parser/get-all-commands.html","searchKeys":["getAllCommands","fun getAllCommands(): List<CommandImpl<T>>","pt.rafap.ktflag.CommandParser.getAllCommands"]},{"name":"fun getAllCommands(): List<CommandImpl<T>>","description":"pt.rafap.ktflag.cmd.CommandRegister.getAllCommands","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-register/get-all-commands.html","searchKeys":["getAllCommands","fun getAllCommands(): List<CommandImpl<T>>","pt.rafap.ktflag.cmd.CommandRegister.getAllCommands"]},{"name":"fun getCommand(name: String): CommandImpl<T>?","description":"pt.rafap.ktflag.CommandParser.getCommand","location":"-kt-flag/pt.rafap.ktflag/-command-parser/get-command.html","searchKeys":["getCommand","fun getCommand(name: String): CommandImpl<T>?","pt.rafap.ktflag.CommandParser.getCommand"]},{"name":"fun printError()","description":"pt.rafap.ktflag.cmd.CommandResult.printError","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/print-error.html","searchKeys":["printError","fun printError()","pt.rafap.ktflag.cmd.CommandResult.printError"]},{"name":"fun printUnknownCommand(name: String, cmdHelp: CommandImpl<*>)","description":"pt.rafap.ktflag.cmd.CommandResult.printUnknownCommand","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/print-unknown-command.html","searchKeys":["printUnknownCommand","fun printUnknownCommand(name: String, cmdHelp: CommandImpl<*>)","pt.rafap.ktflag.cmd.CommandResult.printUnknownCommand"]},{"name":"fun readInputAndGetResult(context: T?): CommandResult<T>?","description":"pt.rafap.ktflag.CommandParser.readInputAndGetResult","location":"-kt-flag/pt.rafap.ktflag/-command-parser/read-input-and-get-result.html","searchKeys":["readInputAndGetResult","fun readInputAndGetResult(context: T?): CommandResult<T>?","pt.rafap.ktflag.CommandParser.readInputAndGetResult"]},{"name":"interface CommandImpl<T>","description":"pt.rafap.ktflag.cmd.CommandImpl","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-impl/index.html","searchKeys":["CommandImpl","interface CommandImpl<T>","pt.rafap.ktflag.cmd.CommandImpl"]},{"name":"object Colors","description":"pt.rafap.ktflag.style.Colors","location":"-kt-flag/pt.rafap.ktflag.style/-colors/index.html","searchKeys":["Colors","object Colors","pt.rafap.ktflag.style.Colors"]},{"name":"open class CommandResult<T>(val cause: String, val message: String, val isError: Boolean, val result: T? = null)","description":"pt.rafap.ktflag.cmd.CommandResult","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/index.html","searchKeys":["CommandResult","open class CommandResult<T>(val cause: String, val message: String, val isError: Boolean, val result: T? = null)","pt.rafap.ktflag.cmd.CommandResult"]},{"name":"open fun CommandImpl<*>.verifyArgsCount(got: Int): Boolean","description":"pt.rafap.ktflag.cmd.CommandImpl.verifyArgsCount","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-impl/verify-args-count.html","searchKeys":["verifyArgsCount","open fun CommandImpl<*>.verifyArgsCount(got: Int): Boolean","pt.rafap.ktflag.cmd.CommandImpl.verifyArgsCount"]},{"name":"open fun joinToString(): String","description":"pt.rafap.ktflag.cmd.CommandImpl.joinToString","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-impl/join-to-string.html","searchKeys":["joinToString","open fun joinToString(): String","pt.rafap.ktflag.cmd.CommandImpl.joinToString"]},{"name":"open override fun toString(): String","description":"pt.rafap.ktflag.cmd.CommandInfo.toString","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/to-string.html","searchKeys":["toString","open override fun toString(): String","pt.rafap.ktflag.cmd.CommandInfo.toString"]},{"name":"operator fun get(alias: String): CommandImpl<T>?","description":"pt.rafap.ktflag.cmd.CommandRegister.get","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-register/get.html","searchKeys":["get","operator fun get(alias: String): CommandImpl<T>?","pt.rafap.ktflag.cmd.CommandRegister.get"]},{"name":"val aliases: List<String>","description":"pt.rafap.ktflag.cmd.CommandInfo.aliases","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/aliases.html","searchKeys":["aliases","val aliases: List<String>","pt.rafap.ktflag.cmd.CommandInfo.aliases"]},{"name":"val cause: String","description":"pt.rafap.ktflag.cmd.CommandResult.cause","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/cause.html","searchKeys":["cause","val cause: String","pt.rafap.ktflag.cmd.CommandResult.cause"]},{"name":"val commands: Map<String, CommandImpl<T>>","description":"pt.rafap.ktflag.cmd.CommandRegister.commands","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-register/commands.html","searchKeys":["commands","val commands: Map<String, CommandImpl<T>>","pt.rafap.ktflag.cmd.CommandRegister.commands"]},{"name":"val config: ParserConfig<T>","description":"pt.rafap.ktflag.CommandParser.config","location":"-kt-flag/pt.rafap.ktflag/-command-parser/config.html","searchKeys":["config","val config: ParserConfig<T>","pt.rafap.ktflag.CommandParser.config"]},{"name":"val description: String","description":"pt.rafap.ktflag.cmd.CommandInfo.description","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/description.html","searchKeys":["description","val description: String","pt.rafap.ktflag.cmd.CommandInfo.description"]},{"name":"val helpCmd: CommandImpl<T>? = null","description":"pt.rafap.ktflag.ParserConfig.helpCmd","location":"-kt-flag/pt.rafap.ktflag/-parser-config/help-cmd.html","searchKeys":["helpCmd","val helpCmd: CommandImpl<T>? = null","pt.rafap.ktflag.ParserConfig.helpCmd"]},{"name":"val isError: Boolean","description":"pt.rafap.ktflag.cmd.CommandResult.isError","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/is-error.html","searchKeys":["isError","val isError: Boolean","pt.rafap.ktflag.cmd.CommandResult.isError"]},{"name":"val longDescription: String","description":"pt.rafap.ktflag.cmd.CommandInfo.longDescription","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/long-description.html","searchKeys":["longDescription","val longDescription: String","pt.rafap.ktflag.cmd.CommandInfo.longDescription"]},{"name":"val maxArgs: Int","description":"pt.rafap.ktflag.cmd.CommandInfo.maxArgs","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/max-args.html","searchKeys":["maxArgs","val maxArgs: Int","pt.rafap.ktflag.cmd.CommandInfo.maxArgs"]},{"name":"val message: String","description":"pt.rafap.ktflag.cmd.CommandResult.message","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/message.html","searchKeys":["message","val message: String","pt.rafap.ktflag.cmd.CommandResult.message"]},{"name":"val minArgs: Int","description":"pt.rafap.ktflag.cmd.CommandInfo.minArgs","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/min-args.html","searchKeys":["minArgs","val minArgs: Int","pt.rafap.ktflag.cmd.CommandInfo.minArgs"]},{"name":"val prompt: String","description":"pt.rafap.ktflag.ParserConfig.prompt","location":"-kt-flag/pt.rafap.ktflag/-parser-config/prompt.html","searchKeys":["prompt","val prompt: String","pt.rafap.ktflag.ParserConfig.prompt"]},{"name":"val result: T? = null","description":"pt.rafap.ktflag.cmd.CommandResult.result","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-result/result.html","searchKeys":["result","val result: T? = null","pt.rafap.ktflag.cmd.CommandResult.result"]},{"name":"val title: String","description":"pt.rafap.ktflag.cmd.CommandInfo.title","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/title.html","searchKeys":["title","val title: String","pt.rafap.ktflag.cmd.CommandInfo.title"]},{"name":"val usage: String","description":"pt.rafap.ktflag.cmd.CommandInfo.usage","location":"-kt-flag/pt.rafap.ktflag.cmd/-command-info/usage.html","searchKeys":["usage","val usage: String","pt.rafap.ktflag.cmd.CommandInfo.usage"]}]